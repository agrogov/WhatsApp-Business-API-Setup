version: '3'

volumes:
  whatsappData:
    external: true
  whatsappMedia:
    driver_opts:
      type: "nfs"
      o: "${NFS_SHARE_OPTS}"
      device: ":/wamedia"

services:
  waweb:
    image: "docker.whatsapp.biz/web:v${WA_API_VERSION}"
    restart: unless-stopped
    command: ["/opt/whatsapp/bin/wait_on_postgres.sh", "/opt/whatsapp/bin/launch_within_docker.sh"]
    ports:
      - "443:443"
      - "9090:443"
    volumes:
      - "whatsappMedia:/usr/local/wamedia"
      - "whatsappData:/usr/local/waent/data"
    environment:
      WA_APP_MULTICONNECT: 1
      WEBAPP_EXTERNAL_PORTS: 443,9090
      EXTERNAL_HOSTNAME: "${SERVER_IP}"
      WEBAPP_HOSTNAME: "${EXTERNAL_HOSTNAME}"
      WEBAPP_CONTAINER_NAME: "webapp_${HOST}"
      WA_DB_ENGINE: "${WA_DB_ENGINE}"
      WA_DB_HOSTNAME: "${WA_DB_HOSTNAME}"
      WA_DB_PORT: "${WA_DB_PORT}"
      WA_DB_USERNAME: "${WA_DB_USERNAME}"
      WA_DB_PASSWORD: "${WA_DB_PASSWORD}"
      WA_RUNNING_ENV_VERSION: v2.2.3
      ORCHESTRATION: DOCKER-COMPOSE
    cap_drop:
      - MKNOD
  wacore:
    image: "docker.whatsapp.biz/coreapp:v${WA_API_VERSION}"
    restart: unless-stopped
    command: ["/opt/whatsapp/bin/wait_on_postgres.sh", "/opt/whatsapp/bin/launch_within_docker.sh"]
    ports:
      - "6250:6250"
      - "6251:6251"
      - "6252:6252"
      - "6253:6253"
    volumes:
      - "whatsappMedia:/usr/local/wamedia"
      - "whatsappData:/usr/local/waent/data"
    environment:
      WA_APP_MULTICONNECT: 1
      WA_CONFIG_ON_DB: 1
      WA_MASTER_NODE: 0
      COREAPP_EXTERNAL_PORTS: 6250,6251,6252,6253
      EXTERNAL_HOSTNAME: "${SERVER_IP}"
      COREAPP_HOSTNAME: "${EXTERNAL_HOSTNAME}"
      COREAPP_CONTAINER_NAME: "coreapp_${HOST}"
      WA_DB_ENGINE: "${WA_DB_ENGINE}"
      WA_DB_HOSTNAME: "${WA_DB_HOSTNAME}"
      WA_DB_PORT: "${WA_DB_PORT}"
      WA_DB_USERNAME: "${WA_DB_USERNAME}"
      WA_DB_PASSWORD: "${WA_DB_PASSWORD}"
      WA_RUNNING_ENV_VERSION: v2.2.3
      ORCHESTRATION: DOCKER-COMPOSE
    cap_drop:
      - MKNOD
  master:
    image: "docker.whatsapp.biz/coreapp:v${WA_API_VERSION}"
    restart: unless-stopped
    command: ["/opt/whatsapp/bin/wait_on_postgres.sh", "/opt/whatsapp/bin/launch_within_docker.sh"]
    ports:
      - "6250:6250"
      - "6251:6251"
      - "6252:6252"
      - "6253:6253"
    volumes:
      - "whatsappMedia:/usr/local/wamedia"
      - "whatsappData:/usr/local/waent/data"
    environment:
      WA_APP_MULTICONNECT: 1
      WA_MASTER_NODE: 1
      WA_CONFIG_ON_DB: 1
      COREAPP_EXTERNAL_PORTS: 6250,6251,6252,6253
      EXTERNAL_HOSTNAME: "${SERVER_IP}"
      COREAPP_HOSTNAME: "${EXTERNAL_HOSTNAME}"
      COREAPP_CONTAINER_NAME: "master_${HOST}"
      WA_DB_ENGINE: "${WA_DB_ENGINE}"
      WA_DB_HOSTNAME: "${WA_DB_HOSTNAME}"
      WA_DB_PORT: "${WA_DB_PORT}"
      WA_DB_USERNAME: "${WA_DB_USERNAME}"
      WA_DB_PASSWORD: "${WA_DB_PASSWORD}"
      WA_RUNNING_ENV_VERSION: v2.2.3
      ORCHESTRATION: DOCKER-COMPOSE
    cap_drop:
      - MKNOD
  cadvisor:
    image: "gcr.io/cadvisor/cadvisor:v0.45.0"
    restart: always
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    privileged: true
  node-exporter:
    image: "prom/node-exporter:v1.3.1"
    restart: always
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    privileged: true
